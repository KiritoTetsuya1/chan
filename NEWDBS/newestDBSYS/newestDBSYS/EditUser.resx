<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>