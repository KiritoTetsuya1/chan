<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>